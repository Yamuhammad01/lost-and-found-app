@page "/update/{ItemId:int}"
@rendermode InteractiveServer
@using LostAndFoundApp.Models
@inject LostAndFoundApp.Services.IItemService ItemService
@inject NavigationManager Navigation

<h3>Update Item</h3>

@if (item == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="mb-3">
        <label for="clubName" class="form-label">Name</label>
            <input type="text" class="form-control" id="clubName" @bind="item.Name" />
    </div>
    <div class="mb-3">
        <label for="country" class="form-label">Finder</label>
        <input type="text" class="form-control" id="country" @bind="item.Finder" />
    </div>
    <div class="mb-3">
        <label for="country" class="form-label">Phone Number</label>
        <input type="text" class="form-control" id="country" @bind="item.PhoneNumber" />
    </div>
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    <button class="btn btn-primary" @onclick="UpdateItem">Save</button>
}

@code {
    [Parameter]
    public int ItemId { get; set; }

    private Models.Item item;

    protected override async Task OnInitializedAsync()
    {
        // Load the club to be updated
        item = await ItemService.GetItem(ItemId);
    }

    private async Task UpdateItem()
    {
        // Update the club using the service
        await ItemService.UpdateItem(item);

        // Redirect back to the club list page
        Navigation.NavigateTo("/item");
    }

    private void Cancel()
    {
        // Navigate back to the club list page
        Navigation.NavigateTo("/item");
    }
}